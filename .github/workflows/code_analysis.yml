name: Pylint and SonarCloud Analysis

on: [push]

jobs:
  lint-and-analyze:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Run Pylint and save JSON report
      run: |
        pylint --output-format=json LLM_GEN/**/*.py > pylint-report.json || true

    - name: Upload Pylint JSON report
      uses: actions/upload-artifact@v4
      with:
        name: pylint-json-report
        path: pylint-report.json


    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=UNIFI-RESILIENCE_ai_code_test
          -Dsonar.organization=unifi-resilience
          -Dsonar.sources=LLM_GEN
          -Dsonar.exclusions=**/*.java


    # - name: Install SonarCloud Scanner
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y unzip openjdk-11-jre
    #     curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
    #     unzip sonar-scanner.zip
    #     sudo mv sonar-scanner-* /opt/sonar-scanner

    # - name: Run SonarCloud Analysis
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: |
    #     /opt/sonar-scanner/bin/sonar-scanner \
    #       -Dsonar.projectKey=UNIFI-RESILIENCE_ai_code_test \
    #       -Dsonar.organization=unifi-resilience \
    #       -Dsonar.sources=LLM_GEN \
    #       -Dsonar.exclusions=**/*.java \
    #       -Dsonar.host.url=https://sonarcloud.io \
    #       -Dsonar.login=$SONAR_TOKEN

    # - name: Run Pylint and save reports
    #   run: |
    #     pip install pylint pylint-json2html
    #     pylint --output-format=json LLM_GEN/**/*.py > pylint-report.json || true
    #     pylint-json2html -f json -o pylint-report.html pylint-report.json
